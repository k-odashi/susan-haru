// オファー

.offer {
  font-family: "游ゴシック体", YuGothic, Hiragino Sans, sans-serif;

  &__title {
    // htmlの改行がそのまま反映される
    white-space: pre-line;

    text-align: center;
    line-height: 1.5;
    font-size: 15px;
    padding-bottom: 10px;
    font-family: "Times New Roman", "YuMincho", "Hiragino Mincho ProN", "Yu Mincho", "MS PMincho", serif;

    &Slash {
      &::before {
        content: "＼";
      }

      &::after {
        content: "／";
      }
    }

    &Emphasis {
      font-size: 24px;
    }

  }

  &__wrap {
    width: calc(100vw - 174px);
  }

  &__item {
    display: flex;
    // flexの時だけセンター揃え
    justify-content: flex-start;
    padding: 5px 15px;
    margin-bottom: 10px;

    &--big {
      flex-flow: column;

      .offer__img {
        width: 100%;
        max-height: min-content;
      }
      .offer__wrap {
        width: 100%;
      }
    }
  }


  &__img {
    width: 130px;
    margin-right: 5px;
    max-height: 170px;
  }

  &__label {
    display: flex;

    &Item {
      background-color: #cb0000;
      color: #fff;
      font-size: 13px;
      border-radius: 3px;
      margin-right: 3px;
      padding: 2px 4px;
    }
  }

  &__name {
    font-size: 18px;
    white-space: pre-wrap;
    margin: 3px 0;
    line-height: 1.3;
  }

  &__detail {
    font-size: 11px;
    margin-bottom: 5px;
  }

  &__listPrice {
    font-size: 12px;
    color: #767676;
    margin-bottom: 0px;
    // 打ち消し線はhtmlのsタグでつける
    s {
      font-size: 23px;
      color: #cb0000;
      font-weight: 500;
    }
  }

  &__discountPrice {
    font-size: 15px;

    &Value {
      color: #cb0000;
      font-size: 35px;
      line-height: 1;
      font-weight: 500;
    }
  }

  &__saving {
    font-size: 15px;
    color: #cb0000;
    margin-bottom: 15px;
    font-weight: 500;
  }


  &__annotation {
    padding: 0 20px;
    margin: 20px auto;
    max-width: 500px;
    text-align: justify;
  }


  // カートボタン
  .offer__button {
    background-color: #b9c524;
    padding: 10px 15px;
    margin: 10px 0 5px;
    color: #fff;
    border-radius: 7px;
    width: 100%;
    display: flex;
    justify-content: center;
    text-align: center;
    // ボタンタグ特有の表示を消す↓
    border: none;
    appearance: none;
    border-bottom: solid 4px #99a30a;

    &:active {
      border-bottom: none;
      transform: translateY(4px);
      margin-bottom: 9px;
    }

    &:focus {
      outline: none;
    }

    span {
      margin-right: 12px;
    }
  }

.offer__banner {
  margin-bottom: 30px;
}

  // PC用
  @media screen and (min-width: 768px) {
    .offer {
      &__item {
        margin: 0 auto 20px;
        width: fit-content;
        align-items: flex-end;
        max-width: 500px;

        &--big {
          flex-flow: row;
          max-width: 900px;

          .offer__img {
            max-width: 440px;
          }
        }
      }

      &__img {
        max-width: 250px;
        height: auto;
      }

      &__labelItem {
        font-size: 15px;
      }

      &__discountPriceValue {
        font-size: 50px;
      }

      .button {
        min-width: 425px;
      }

    }
  }
}



.offer__accordion__contents {
  margin: 10px 20px 5px;
  text-align: justify;
}


.accordion4 {
  &__input {
    display: none;

    /* inputタグがチェック状態になるとactiveになる */
    &:checked {

      /* 【「~」の説明】
      「~」の意味は、後ろにある同じ階層の要素
      今回だと、[accordion__input]がcheckedの状態の時、
      同じ階層で、後ろにある[accordion__wrap]と
      [accordion__label]にCSSを効かせることができる。

      Q：「~」が無かったらどうなる？
      A：無い時の書き方は、↓のようになるが、
      [accordion__input]の一階層下にCSSを効かせる。
      という意味になってしまう。
        -    &:checked{
        -        .accordion__wrap{             
      */

      ~ .accordion4__wrap {
        height: auto;
        // checkがついてる時、文字を覆っているdivの高さをコンテンツに合わせた高さに変える。
      }

      ~ .accordion4__label {
        // checkがついてる時、ボタンの中の疑似要素を変更する
        &::before {
          content: "閉じる"
        }

        &::after {
          font-family: "Font Awesome 5 Free";
          content: "\f068";
          /* font awesomeアイコンを使いたい時
            https://fontawesome.com/icons/times?style=solid
            ↑ページなど公式ページから、Unicodeをコピペし、contentに入れる。
            font-familyも指定する必要あり。
            Unicodeの位置参考：https://digitalidentity.co.jp/blog/creative/font-awesome.html#CSS
          */
          padding-left: 8px;
          color: #b8b1cd;
          font-weight: 900;

        }
      }
    }
  }

  &__wrap {
    overflow: hidden;
    // checkがついてない時のコンテンツの高さ（デフォルト値になる）
    // 0pxにすると完全に隠れる
    height: 0px;
  }

  &__label {
    text-align: center;
    display: block;
    padding: 10px;
    border: 1px solid;
    border-color: #b8b1cd;
    border-radius: 30px;
    background-color: #FFFEF4;
    margin-bottom: 10px;

    // checkedがついてない時の疑似要素設定
    &::before {
      content: "商品の説明";
      color: #dd5253;
    }

    &::after {
      font-family: "Font Awesome 5 Free";
      content: "\f067";
      padding-left: 8px;
      color: #b8b1cd;
      font-weight: 900;
    }
  }
}


.offer__accordion__top {
  // max-width: 300px;
  margin: 20px auto;
  margin-bottom: 10px;
}

@media screen and (min-width: 768px) {
  .offer__accordion__top {
    max-width: 70%;
  }
}

.accordion4__label {
  max-width: 300px;
  margin: 10px auto;
  margin-bottom: 20px;
}


// 5
.accordion5 {
  &__input {
    display: none;

    /* inputタグがチェック状態になるとactiveになる */
    &:checked {

      /* 【「~」の説明】
      「~」の意味は、後ろにある同じ階層の要素
      今回だと、[accordion__input]がcheckedの状態の時、
      同じ階層で、後ろにある[accordion__wrap]と
      [accordion__label]にCSSを効かせることができる。

      Q：「~」が無かったらどうなる？
      A：無い時の書き方は、↓のようになるが、
      [accordion__input]の一階層下にCSSを効かせる。
      という意味になってしまう。
        -    &:checked{
        -        .accordion__wrap{             
      */

      ~ .accordion5__wrap {
        height: auto;
        // checkがついてる時、文字を覆っているdivの高さをコンテンツに合わせた高さに変える。
      }

      ~ .accordion5__label {
        // checkがついてる時、ボタンの中の疑似要素を変更する
        &::before {
          content: "閉じる"
        }

        &::after {
          font-family: "Font Awesome 5 Free";
          content: "\f068";
          /* font awesomeアイコンを使いたい時
            https://fontawesome.com/icons/times?style=solid
            ↑ページなど公式ページから、Unicodeをコピペし、contentに入れる。
            font-familyも指定する必要あり。
            Unicodeの位置参考：https://digitalidentity.co.jp/blog/creative/font-awesome.html#CSS
          */
          padding-left: 8px;
          color: #b8b1cd;
          font-weight: 900;

        }
      }
    }
  }

  &__wrap {
    overflow: hidden;
    // checkがついてない時のコンテンツの高さ（デフォルト値になる）
    // 0pxにすると完全に隠れる
    height: 0px;
  }

  &__label {
    text-align: center;
    display: block;
    padding: 10px;
    border: 1px solid;
    border-color: #b8b1cd;
    border-radius: 30px;
    background-color: #FFFEF4;
    margin-bottom: 10px;

    // checkedがついてない時の疑似要素設定
    &::before {
      content: "商品の説明";
      color: #dd5253;
    }

    &::after {
      font-family: "Font Awesome 5 Free";
      content: "\f067";
      padding-left: 8px;
      color: #b8b1cd;
      font-weight: 900;
    }
  }
}


.offer__accordion__top {
  // max-width: 300px;
  margin: 20px auto;
  margin-bottom: 10px;
}

@media screen and (min-width: 768px) {
  .offer__accordion__top {
    max-width: 70%;
  }
}

.accordion5__label {
  max-width: 300px;
  margin: 10px auto;
  margin-bottom: 20px;
}


// 6
.accordion6 {
  &__input {
    display: none;

    /* inputタグがチェック状態になるとactiveになる */
    &:checked {

      /* 【「~」の説明】
      「~」の意味は、後ろにある同じ階層の要素
      今回だと、[accordion__input]がcheckedの状態の時、
      同じ階層で、後ろにある[accordion__wrap]と
      [accordion__label]にCSSを効かせることができる。

      Q：「~」が無かったらどうなる？
      A：無い時の書き方は、↓のようになるが、
      [accordion__input]の一階層下にCSSを効かせる。
      という意味になってしまう。
        -    &:checked{
        -        .accordion__wrap{             
      */

      ~ .accordion6__wrap {
        height: auto;
        // checkがついてる時、文字を覆っているdivの高さをコンテンツに合わせた高さに変える。
      }

      ~ .accordion6__label {
        // checkがついてる時、ボタンの中の疑似要素を変更する
        &::before {
          content: "閉じる"
        }

        &::after {
          font-family: "Font Awesome 5 Free";
          content: "\f068";
          /* font awesomeアイコンを使いたい時
            https://fontawesome.com/icons/times?style=solid
            ↑ページなど公式ページから、Unicodeをコピペし、contentに入れる。
            font-familyも指定する必要あり。
            Unicodeの位置参考：https://digitalidentity.co.jp/blog/creative/font-awesome.html#CSS
          */
          padding-left: 8px;
          color: #b8b1cd;
          font-weight: 900;

        }
      }
    }
  }

  &__wrap {
    overflow: hidden;
    // checkがついてない時のコンテンツの高さ（デフォルト値になる）
    // 0pxにすると完全に隠れる
    height: 0px;
  }

  &__label {
    text-align: center;
    display: block;
    padding: 10px;
    border: 1px solid;
    border-color: #b8b1cd;
    border-radius: 30px;
    background-color: #FFFEF4;
    margin-bottom: 10px;

    // checkedがついてない時の疑似要素設定
    &::before {
      content: "商品の説明";
      color: #dd5253;
    }

    &::after {
      font-family: "Font Awesome 5 Free";
      content: "\f067";
      padding-left: 8px;
      color: #b8b1cd;
      font-weight: 900;
    }
  }
}


.offer__accordion__top {
  // max-width: 300px;
  margin: 20px auto;
  margin-bottom: 10px;
}

@media screen and (min-width: 768px) {
  .offer__accordion__top {
    max-width: 70%;
  }
}

.accordion6__label {
  max-width: 300px;
  margin: 10px auto;
  margin-bottom: 20px;
}


// 7
.accordion7 {
  &__input {
    display: none;

    /* inputタグがチェック状態になるとactiveになる */
    &:checked {

      /* 【「~」の説明】
      「~」の意味は、後ろにある同じ階層の要素
      今回だと、[accordion__input]がcheckedの状態の時、
      同じ階層で、後ろにある[accordion__wrap]と
      [accordion__label]にCSSを効かせることができる。

      Q：「~」が無かったらどうなる？
      A：無い時の書き方は、↓のようになるが、
      [accordion__input]の一階層下にCSSを効かせる。
      という意味になってしまう。
        -    &:checked{
        -        .accordion__wrap{             
      */

      ~ .accordion7__wrap {
        height: auto;
        // checkがついてる時、文字を覆っているdivの高さをコンテンツに合わせた高さに変える。
      }

      ~ .accordion7__label {
        // checkがついてる時、ボタンの中の疑似要素を変更する
        &::before {
          content: "閉じる"
        }

        &::after {
          font-family: "Font Awesome 5 Free";
          content: "\f068";
          /* font awesomeアイコンを使いたい時
            https://fontawesome.com/icons/times?style=solid
            ↑ページなど公式ページから、Unicodeをコピペし、contentに入れる。
            font-familyも指定する必要あり。
            Unicodeの位置参考：https://digitalidentity.co.jp/blog/creative/font-awesome.html#CSS
          */
          padding-left: 8px;
          color: #b8b1cd;
          font-weight: 900;

        }
      }
    }
  }

  &__wrap {
    overflow: hidden;
    // checkがついてない時のコンテンツの高さ（デフォルト値になる）
    // 0pxにすると完全に隠れる
    height: 0px;
  }

  &__label {
    text-align: center;
    display: block;
    padding: 10px;
    border: 1px solid;
    border-color: #b8b1cd;
    border-radius: 30px;
    background-color: #FFFEF4;
    margin-bottom: 10px;

    // checkedがついてない時の疑似要素設定
    &::before {
      content: "商品の説明";
      color: #dd5253;
    }

    &::after {
      font-family: "Font Awesome 5 Free";
      content: "\f067";
      padding-left: 8px;
      color: #b8b1cd;
      font-weight: 900;
    }
  }
}


.offer__accordion__top {
  // max-width: 300px;
  margin: 20px auto;
  margin-bottom: 10px;
}

@media screen and (min-width: 768px) {
  .offer__accordion__top {
    max-width: 70%;
  }
}

.accordion7__label {
  max-width: 300px;
  margin: 10px auto;
  margin-bottom: 20px;
}