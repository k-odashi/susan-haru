// hogeはよしなに変更してください
.secret {
  width: 300px;
  margin: 20px auto ;
  margin-bottom: 20px;

  &__contents {
    text-align: justify;
    margin-bottom: 20px;
  }

  &__img {
    margin-bottom: 20px;
  }
}




.accordion1 {
  &__input {
    display: none;

    /* inputタグがチェック状態になるとactiveになる */
    &:checked {

      /* 【「~」の説明】
      「~」の意味は、後ろにある同じ階層の要素
      今回だと、[accordion__input]がcheckedの状態の時、
      同じ階層で、後ろにある[accordion__wrap]と
      [accordion__label]にCSSを効かせることができる。

      Q：「~」が無かったらどうなる？
      A：無い時の書き方は、↓のようになるが、
      [accordion__input]の一階層下にCSSを効かせる。
      という意味になってしまう。
        -    &:checked{
        -        .accordion__wrap{             
      */

      ~ .accordion1__wrap {
        height: auto;
        // checkがついてる時、文字を覆っているdivの高さをコンテンツに合わせた高さに変える。
      }

      ~ .accordion1__label {
        // checkがついてる時、ボタンの中の疑似要素を変更する
        &::before {
          content: "閉じる"
        }

        &::after {
          font-family: "Font Awesome 5 Free";
          content: "\f068";
          /* font awesomeアイコンを使いたい時
            https://fontawesome.com/icons/times?style=solid
            ↑ページなど公式ページから、Unicodeをコピペし、contentに入れる。
            font-familyも指定する必要あり。
            Unicodeの位置参考：https://digitalidentity.co.jp/blog/creative/font-awesome.html#CSS
          */
          padding-left: 8px;
          color: #b8b1cd;
          font-weight: 900;
        }
      }
    }
  }

  &__wrap {
    overflow: hidden;
    // checkがついてない時のコンテンツの高さ（デフォルト値になる）
    // 0pxにすると完全に隠れる
    height: 0px;
  }

  &__label {
    text-align: center;
    display: block;
    padding: 10px;
    border: 1px solid;
    border-color: #b8b1cd;
    border-radius: 30px;
    background-color: #FFFEF4;
    margin-bottom: 10px;
      // 色とか変える

    // checkedがついてない時の疑似要素設定
    &::before {
      content: "大切な３つのケアって？";
      color: #dd5253;
    }

    &::after {
      font-family: "Font Awesome 5 Free";
      content: "\f067";
      padding-left: 8px;
      color: #b8b1cd;
      font-weight: 900;
    }
  }
}

.accordion2 {
  &__input {
    display: none;

    /* inputタグがチェック状態になるとactiveになる */
    &:checked {

      /* 【「~」の説明】
      「~」の意味は、後ろにある同じ階層の要素
      今回だと、[accordion__input]がcheckedの状態の時、
      同じ階層で、後ろにある[accordion__wrap]と
      [accordion__label]にCSSを効かせることができる。

      Q：「~」が無かったらどうなる？
      A：無い時の書き方は、↓のようになるが、
      [accordion__input]の一階層下にCSSを効かせる。
      という意味になってしまう。
        -    &:checked{
        -        .accordion__wrap{             
      */

      ~ .accordion2__wrap {
        height: auto;
        // checkがついてる時、文字を覆っているdivの高さをコンテンツに合わせた高さに変える。
      }

      ~ .accordion2__label {
        // checkがついてる時、ボタンの中の疑似要素を変更する
        &::before {
          content: "閉じる"
        }

        &::after {
          font-family: "Font Awesome 5 Free";
          content: "\f068";
          /* font awesomeアイコンを使いたい時
            https://fontawesome.com/icons/times?style=solid
            ↑ページなど公式ページから、Unicodeをコピペし、contentに入れる。
            font-familyも指定する必要あり。
            Unicodeの位置参考：https://digitalidentity.co.jp/blog/creative/font-awesome.html#CSS
          */
          padding-left: 8px;
          color: #b8b1cd;
          font-weight: 900;
        }
      }
    }
  }

  &__wrap {
    overflow: hidden;
    // checkがついてない時のコンテンツの高さ（デフォルト値になる）
    // 0pxにすると完全に隠れる
    height: 0px;
  }

  &__label {
    text-align: center;
    display: block;
    padding: 10px;
    border: 1px solid;
    border-color: #b8b1cd;
    border-radius: 30px;
    background-color: #FFFEF4;
    margin-bottom: 10px;

    // checkedがついてない時の疑似要素設定
    &::before {
      content: "毎日無理なく続けられる";
      color: #dd5253;
    }

    &::after {
      font-family: "Font Awesome 5 Free";
      content: "\f067";
      padding-left: 8px;
      color: #b8b1cd;
      font-weight: 900;
    }
  }
}

.accordion3 {
  &__input {
    display: none;

    /* inputタグがチェック状態になるとactiveになる */
    &:checked {

      /* 【「~」の説明】
      「~」の意味は、後ろにある同じ階層の要素
      今回だと、[accordion__input]がcheckedの状態の時、
      同じ階層で、後ろにある[accordion__wrap]と
      [accordion__label]にCSSを効かせることができる。

      Q：「~」が無かったらどうなる？
      A：無い時の書き方は、↓のようになるが、
      [accordion__input]の一階層下にCSSを効かせる。
      という意味になってしまう。
        -    &:checked{
        -        .accordion__wrap{             
      */

      ~ .accordion3__wrap {
        height: auto;
        // checkがついてる時、文字を覆っているdivの高さをコンテンツに合わせた高さに変える。
      }

      ~ .accordion3__label {
        // checkがついてる時、ボタンの中の疑似要素を変更する
        &::before {
          content: "閉じる"
        }

        &::after {
          font-family: "Font Awesome 5 Free";
          content: "\f068";
          /* font awesomeアイコンを使いたい時
            https://fontawesome.com/icons/times?style=solid
            ↑ページなど公式ページから、Unicodeをコピペし、contentに入れる。
            font-familyも指定する必要あり。
            Unicodeの位置参考：https://digitalidentity.co.jp/blog/creative/font-awesome.html#CSS
          */
          padding-left: 8px;
          color: #b8b1cd;
          font-weight: 900;
        }
      }
    }
  }

  &__wrap {
    overflow: hidden;
    // checkがついてない時のコンテンツの高さ（デフォルト値になる）
    // 0pxにすると完全に隠れる
    height: 0px;
  }

  &__label {
    text-align: center;
    display: block;
    padding: 10px;
    border: 1px solid;
    border-color: #b8b1cd;
    border-radius: 30px;
    background-color: #FFFEF4;
    margin-bottom: 10px;


    // checkedがついてない時の疑似要素設定
    &::before {
      content: "泡のこだわり";
      // 文字の色
      color: #dd5253;
    }

    &::after {
      font-family: "Font Awesome 5 Free";
      content: "\f067";
      padding-left: 8px;
      color: #b8b1cd;
      font-weight: 900;
    }
  }
}


// PC用はあとで設定する
@media screen and (min-width: 768px) {
  .secret {
    width: 600px;

  }
}